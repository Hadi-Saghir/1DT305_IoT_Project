[
    {
        "id": "6ad1a062e409bd44",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "630b892cba59f1fd",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "influxdata",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "rejectUnauthorized": false
    },
    {
        "id": "d2b13fe36ec1d327",
        "type": "telegram bot",
        "botname": "LNU_Coffee_Bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "4623c356d3ed6d1a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt://mosquitto",
        "port": "1883",
        "clientid": "hadsag",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "47d248576dee0d36",
        "type": "mqtt out",
        "z": "6ad1a062e409bd44",
        "name": "brew/start",
        "topic": "brew/start",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4623c356d3ed6d1a",
        "x": 600,
        "y": 580,
        "wires": []
    },
    {
        "id": "2acd1bb194d2215d",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "format response",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar chatId = msg.payload.chatId;\nvar messageId = msg.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"Welcome to the LNU Coffee Bot built by Hadi Saghir! To get started, type /help for some useful commands.\"\n\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 280,
        "wires": [
            [
                "2e75ae89b7eb0105",
                "87b097932eb7029a"
            ]
        ]
    },
    {
        "id": "87b097932eb7029a",
        "type": "debug",
        "z": "6ad1a062e409bd44",
        "name": "Debug - Start",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 190,
        "y": 200,
        "wires": []
    },
    {
        "id": "7f18fb08934f41aa",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "format response",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar chatId = msg.payload.chatId;\nvar messageId = msg.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"The following commands are available:\\n\\n\" +\n        \"/brew  - Start brewing coffee instantly.\\n\" +\n        \"/brew schedule <time> - Schedule using time.\\n\" +\n        \"/brew timer <time> - Schedule using a preset timer.\\n\" +\n        \"/warm <time> - Keep warm for a certain amount of time.\\n\" +\n        \"/warm - Keep warm until instructed otherwise.\\n\" +\n        \"/off - turn coffee machine off.\\n\" +\n        \"/report brew - Generate a temperature report for coffee brew.\\n\" +\n        \"/report warm - Generate a temperature report for coffee warm.\"\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 280,
        "wires": [
            [
                "a173966f2304fb43",
                "95b9e8875f7916b4"
            ]
        ]
    },
    {
        "id": "95b9e8875f7916b4",
        "type": "debug",
        "z": "6ad1a062e409bd44",
        "name": "Debug - help",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 200,
        "wires": []
    },
    {
        "id": "912902990af68226",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "unauthorized",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar chatId = msg.payload.chatId;\nvar messageId = msg.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"Welcome to the LNU Coffee Bot. You currently don't have access to use commands. Please contact the owner to give you permission\"\n\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 340,
        "wires": [
            [
                "2e75ae89b7eb0105"
            ]
        ]
    },
    {
        "id": "58f3dea9a1c1ab73",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "unauthorized",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar chatId = msg.payload.chatId;\nvar messageId = msg.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"You currently don't have access to use commands. Please contact the owner to give you permission\"\n\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 340,
        "wires": [
            [
                "a173966f2304fb43"
            ]
        ]
    },
    {
        "id": "32def4e6fc2163a5",
        "type": "switch",
        "z": "6ad1a062e409bd44",
        "name": "1:now 2:schedule 3:timer",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "cont",
                "v": "schedule",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": " timer",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 680,
        "wires": [
            [
                "47d248576dee0d36"
            ],
            [
                "695e458460ce3374"
            ],
            [
                "d76586eab337e6f7"
            ]
        ]
    },
    {
        "id": "ec9c990ca5cb6ea4",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "unauthorized",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar chatId = msg.payload.chatId;\nvar messageId = msg.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"Welcome to the LNU Coffee Bot. You currently don't have access to use commands. Please contact the owner to give you permission\"\n\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1180,
        "wires": [
            [
                "ce068af3fca22e17"
            ]
        ]
    },
    {
        "id": "6292b0062523e91b",
        "type": "delay",
        "z": "6ad1a062e409bd44",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 760,
        "y": 680,
        "wires": [
            [
                "5093c489b14a40d0"
            ]
        ]
    },
    {
        "id": "695e458460ce3374",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "schedule",
        "func": "// Extract the time from the command\nvar command = msg.payload.content; // Assuming the command is in the content property\nvar time = '';\n\n// Check if the command is '/brew schedule'\nif (command.startsWith('/brew schedule')) {\n    // Extract the time after '/brew schedule'\n    time = command.replace('/brew schedule', '').trim();\n}\n\n// Set the delay in the msg.delay property\nif (time !== '') {\n    // Split the time into hours and minutes\n    var timeParts = time.split(':');\n    var hours = parseInt(timeParts[0]);\n    var minutes = parseInt(timeParts[1]);\n\n    // Calculate the delay in milliseconds\n    var currentDate = new Date();\n    var scheduledDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), hours, minutes);\n\n    // Schedule relative to the current time\n    var delay = scheduledDate.getTime() - currentDate.getTime();\n    if (delay < 0) {\n        delay += 24 * 60 * 60 * 1000; // Add 24 hours if the scheduled time has already passed\n    }\n\n    // Set the delay in the msg object\n    msg.delay = delay;\n    msg.commandType = 'schedule'; // Add a property to indicate the command type\n}\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 640,
        "wires": [
            [
                "6292b0062523e91b"
            ]
        ]
    },
    {
        "id": "d76586eab337e6f7",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "Timer",
        "func": "// Extract the time from the command\nvar command = msg.payload.content; // Assuming the command is in the content property\nvar time = '';\n\n// Check if the command is '/brew timer'\nif (command.startsWith('/brew timer')) {\n    // Extract the time after '/brew timer'\n    time = command.replace('/brew timer', '').trim();\n}\n\n// Set the delay in the msg.delay property\nif (time !== '') {\n    // Split the time into hours and minutes\n    var timeParts = time.split(':');\n    var hours = parseInt(timeParts[0]);\n    var minutes = parseInt(timeParts[1]);\n\n    // Calculate the delay in milliseconds\n    var delay = (hours * 60 * 60 * 1000) + (minutes * 60 * 1000); // Calculate the delay in milliseconds\n\n    // Set the delay in the msg object\n    msg.delay = delay;\n    msg.commandType = 'timer'; // Add a property to indicate the command type\n}\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 720,
        "wires": [
            [
                "6292b0062523e91b"
            ]
        ]
    },
    {
        "id": "1c246cdc02722748",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "format response",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar telegramMessage = msg.payload[0];\n\nvar chatId = telegramMessage.payload.chatId;\nvar messageId = telegramMessage.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"Started Brewing!\"\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1020,
        "wires": [
            [
                "da9f13eb77035ccb"
            ]
        ]
    },
    {
        "id": "f01bd882f8b62ba8",
        "type": "mqtt in",
        "z": "6ad1a062e409bd44",
        "name": "brew/started",
        "topic": "brew/started",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4623c356d3ed6d1a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1060,
        "wires": [
            [
                "ee34a2e73d55ec59"
            ]
        ]
    },
    {
        "id": "78556b27a9450cc2",
        "type": "debug",
        "z": "6ad1a062e409bd44",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1100,
        "wires": []
    },
    {
        "id": "473e28f267e85ead",
        "type": "join",
        "z": "6ad1a062e409bd44",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "",
        "propertyType": "full",
        "key": "payload",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 1020,
        "wires": [
            [
                "1c246cdc02722748",
                "78556b27a9450cc2"
            ]
        ]
    },
    {
        "id": "5093c489b14a40d0",
        "type": "mqtt out",
        "z": "6ad1a062e409bd44",
        "name": "brew/start",
        "topic": "brew/start",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4623c356d3ed6d1a",
        "x": 920,
        "y": 680,
        "wires": []
    },
    {
        "id": "a11e844eb085c5d1",
        "type": "mqtt in",
        "z": "6ad1a062e409bd44",
        "name": "brew/done",
        "topic": "brew/done",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4623c356d3ed6d1a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 800,
        "wires": [
            [
                "310d1fd3012ad686"
            ]
        ]
    },
    {
        "id": "a68b83757fed6b47",
        "type": "join",
        "z": "6ad1a062e409bd44",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 610,
        "y": 840,
        "wires": [
            [
                "db12c3d0257641bf",
                "a90b7accd8adef8c"
            ]
        ]
    },
    {
        "id": "db12c3d0257641bf",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "format response",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar telegramMessage = msg.payload[0];\n\nvar chatId = telegramMessage.payload.chatId;\nvar messageId = telegramMessage.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"Coffee is ready! Enjoy!\"\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 840,
        "wires": [
            [
                "da9f13eb77035ccb"
            ]
        ]
    },
    {
        "id": "a90b7accd8adef8c",
        "type": "debug",
        "z": "6ad1a062e409bd44",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 780,
        "wires": []
    },
    {
        "id": "af6e9ad6c9b44b42",
        "type": "mqtt out",
        "z": "6ad1a062e409bd44",
        "name": "wam/start",
        "topic": "warm/start",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4623c356d3ed6d1a",
        "x": 320,
        "y": 1360,
        "wires": []
    },
    {
        "id": "f00ae95e008ad306",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "format response",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar telegramMessage = msg.payload[0];\n\nvar chatId = telegramMessage.payload.chatId;\nvar messageId = telegramMessage.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"Warm process started!\"\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1500,
        "wires": [
            [
                "88e6d750577306a3"
            ]
        ]
    },
    {
        "id": "5a3ecf8aaba18a2d",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "unauthorized",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar chatId = msg.payload.chatId;\nvar messageId = msg.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"Welcome to the LNU Coffee Bot. You currently don't have access to use commands. Please contact the owner to give you permission\"\n\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1860,
        "wires": [
            [
                "283b0c4b9d8c1cdf"
            ]
        ]
    },
    {
        "id": "3b581c4ee7ab15b4",
        "type": "mqtt in",
        "z": "6ad1a062e409bd44",
        "name": "wam/started",
        "topic": "warm/started",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4623c356d3ed6d1a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 1460,
        "wires": [
            [
                "a1878128f4544fd8"
            ]
        ]
    },
    {
        "id": "ba137ba10ec0d2c5",
        "type": "debug",
        "z": "6ad1a062e409bd44",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1440,
        "wires": []
    },
    {
        "id": "4c57d022bd600fb1",
        "type": "join",
        "z": "6ad1a062e409bd44",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "",
        "propertyType": "full",
        "key": "payload",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 610,
        "y": 1500,
        "wires": [
            [
                "f00ae95e008ad306",
                "ba137ba10ec0d2c5"
            ]
        ]
    },
    {
        "id": "752eabfc792da949",
        "type": "mqtt in",
        "z": "6ad1a062e409bd44",
        "name": "wam/done",
        "topic": "warm/done",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4623c356d3ed6d1a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 1760,
        "wires": [
            [
                "04406cf316e9b7c9"
            ]
        ]
    },
    {
        "id": "ccc672b043e8d705",
        "type": "join",
        "z": "6ad1a062e409bd44",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 610,
        "y": 1700,
        "wires": [
            [
                "c2255d49b107d583",
                "1e1816ecec82400c"
            ]
        ]
    },
    {
        "id": "c2255d49b107d583",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "format response",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar telegramMessage = msg.payload[0];\n\nvar chatId = telegramMessage.payload.chatId;\nvar messageId = telegramMessage.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"Warm process done!\"\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1700,
        "wires": [
            [
                "88e6d750577306a3"
            ]
        ]
    },
    {
        "id": "1e1816ecec82400c",
        "type": "debug",
        "z": "6ad1a062e409bd44",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1760,
        "wires": []
    },
    {
        "id": "ee34a2e73d55ec59",
        "type": "template",
        "z": "6ad1a062e409bd44",
        "name": "",
        "field": "complete",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "1\n",
        "output": "str",
        "x": 440,
        "y": 1060,
        "wires": [
            [
                "473e28f267e85ead"
            ]
        ]
    },
    {
        "id": "310d1fd3012ad686",
        "type": "template",
        "z": "6ad1a062e409bd44",
        "name": "",
        "field": "complete",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "1\n",
        "output": "str",
        "x": 420,
        "y": 800,
        "wires": [
            [
                "a68b83757fed6b47"
            ]
        ]
    },
    {
        "id": "a1878128f4544fd8",
        "type": "template",
        "z": "6ad1a062e409bd44",
        "name": "",
        "field": "complete",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "1\n",
        "output": "str",
        "x": 460,
        "y": 1460,
        "wires": [
            [
                "4c57d022bd600fb1"
            ]
        ]
    },
    {
        "id": "04406cf316e9b7c9",
        "type": "template",
        "z": "6ad1a062e409bd44",
        "name": "",
        "field": "complete",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "1\n",
        "output": "str",
        "x": 440,
        "y": 1760,
        "wires": [
            [
                "ccc672b043e8d705"
            ]
        ]
    },
    {
        "id": "f9366fb95c3e9d1a",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "format response",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar telegramMessage = msg.payload[0];\n\nvar chatId = telegramMessage.payload.chatId;\nvar messageId = telegramMessage.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"The coffee machine is now off!\"\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 2120,
        "wires": [
            [
                "e712da9e8967fbcf"
            ]
        ]
    },
    {
        "id": "30c8fb753e32b849",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "unauthorized",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar chatId = msg.payload.chatId;\nvar messageId = msg.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"Welcome to the LNU Coffee Bot. You currently don't have access to use commands. Please contact the owner to give you permission\"\n\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2240,
        "wires": [
            [
                "e712da9e8967fbcf"
            ]
        ]
    },
    {
        "id": "3103e545bdc1c912",
        "type": "mqtt out",
        "z": "6ad1a062e409bd44",
        "name": "off/start",
        "topic": "off/start",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4623c356d3ed6d1a",
        "x": 320,
        "y": 2000,
        "wires": []
    },
    {
        "id": "60933a1b80109533",
        "type": "mqtt in",
        "z": "6ad1a062e409bd44",
        "name": "off/done",
        "topic": "off/done",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4623c356d3ed6d1a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 2080,
        "wires": [
            [
                "5458562c9060d38a"
            ]
        ]
    },
    {
        "id": "b2b4e0bff62cbf87",
        "type": "join",
        "z": "6ad1a062e409bd44",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 2120,
        "wires": [
            [
                "f9366fb95c3e9d1a"
            ]
        ]
    },
    {
        "id": "5458562c9060d38a",
        "type": "template",
        "z": "6ad1a062e409bd44",
        "name": "",
        "field": "complete",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "1\n",
        "output": "str",
        "x": 420,
        "y": 2080,
        "wires": [
            [
                "b2b4e0bff62cbf87"
            ]
        ]
    },
    {
        "id": "a4a5d81824b867f5",
        "type": "mqtt in",
        "z": "6ad1a062e409bd44",
        "name": "brew/done/sensor/temp",
        "topic": "brew/done/sensor/temp",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "4623c356d3ed6d1a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 2760,
        "wires": [
            [
                "c50d702fba17dac3",
                "041adf979779f0d9"
            ]
        ]
    },
    {
        "id": "9472219857b88852",
        "type": "mqtt in",
        "z": "6ad1a062e409bd44",
        "name": "warm/sensor/temp",
        "topic": "warm/sensor/temp",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4623c356d3ed6d1a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 2840,
        "wires": [
            [
                "bd6c402ed91d26d8",
                "041adf979779f0d9"
            ]
        ]
    },
    {
        "id": "136a191a479e148a",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "unauthorized",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar chatId = msg.payload.chatId;\nvar messageId = msg.payload.messageId;\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: \"Welcome to the LNU Coffee Bot. You currently don't have access to use commands. Please contact the owner to give you permission\"\n\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2580,
        "wires": [
            [
                "7aac80dd60d6446d"
            ]
        ]
    },
    {
        "id": "979f8c6d0a8fed2a",
        "type": "switch",
        "z": "6ad1a062e409bd44",
        "name": "1:brew 2:warm",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "brew",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "warm",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 2340,
        "wires": [
            [
                "67b0eaa15917057a"
            ],
            [
                "0662755d868a554e"
            ]
        ]
    },
    {
        "id": "c38fe13b1b60503e",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "format response",
        "func": "// Extract the chat ID and message ID from the incoming message\nvar telegramMessage = msg.payload[0];\n\nvar chatId = telegramMessage.payload.chatId;\nvar messageId = telegramMessage.payload.messageId;\n\n// Get the data array from the payload\nvar data = msg.payload[1].payload;\n\n// Create a variable to store the text format\nvar textFormat = \"\";\n\n// Calculate the average\nvar sum = 0;\nvar count = data.length;\n\nfor (var i = 0; i < 50; i++) {\n    var value = data[i]._value;\n    sum += value;\n    textFormat += \"Measurement: \" + value + \"\\n\";\n}\n\nvar average = sum / count;\n\n// Append the average to the text format\ntextFormat += \"\\nAverage: \" + average.toFixed(2);\n\n// Create a new message payload with the extracted chat ID, message ID, and text\nmsg.payload = {\n    chatId: chatId,\n    sentMessageId: messageId,\n    type: \"message\",\n    content: textFormat\n};\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 2480,
        "wires": [
            [
                "3a71c2010e9d412f"
            ]
        ]
    },
    {
        "id": "dbaf87357f6fcd51",
        "type": "mqtt in",
        "z": "6ad1a062e409bd44",
        "name": "warm/sensor/humid",
        "topic": "warm/sensor/humid",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4623c356d3ed6d1a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 2920,
        "wires": [
            [
                "0f52da64cac47fad",
                "041adf979779f0d9"
            ]
        ]
    },
    {
        "id": "67b0eaa15917057a",
        "type": "template",
        "z": "6ad1a062e409bd44",
        "name": "brew",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "from(bucket: \"warm\")\n  |> range(start: 0)\n  |> filter(fn: (r) => r._measurement == \"temp\")",
        "output": "str",
        "x": 490,
        "y": 2300,
        "wires": [
            [
                "c74a6e622e3660b1"
            ]
        ]
    },
    {
        "id": "fbc5f2b538ef476f",
        "type": "join",
        "z": "6ad1a062e409bd44",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 650,
        "y": 2480,
        "wires": [
            [
                "c38fe13b1b60503e",
                "084cb569da86524c"
            ]
        ]
    },
    {
        "id": "c4a33edcc2df8414",
        "type": "function",
        "z": "6ad1a062e409bd44",
        "name": "function 1",
        "func": "// Store the result of the InfluxDB query in a variable\nvar influxResult = msg.payload;\n\n\n// Combine the result with msg.complete\nmsg.payload = influxResult;\nmsg.complete = 1;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 2320,
        "wires": [
            [
                "fbc5f2b538ef476f"
            ]
        ]
    },
    {
        "id": "084cb569da86524c",
        "type": "debug",
        "z": "6ad1a062e409bd44",
        "name": "debug - report",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 2600,
        "wires": []
    },
    {
        "id": "0662755d868a554e",
        "type": "template",
        "z": "6ad1a062e409bd44",
        "name": "warm",
        "field": "query",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "from(bucket: \"warm\")\n  |> range(start: 0)\n  |> filter(fn: (r) => r._measurement == \"temp\")\n\n",
        "output": "str",
        "x": 490,
        "y": 2360,
        "wires": [
            [
                "c74a6e622e3660b1"
            ]
        ]
    },
    {
        "id": "c50d702fba17dac3",
        "type": "influxdb out",
        "z": "6ad1a062e409bd44",
        "influxdb": "630b892cba59f1fd",
        "name": "brew",
        "measurement": "temp",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "hadsag",
        "bucket": "brew",
        "x": 450,
        "y": 2760,
        "wires": []
    },
    {
        "id": "bd6c402ed91d26d8",
        "type": "influxdb out",
        "z": "6ad1a062e409bd44",
        "influxdb": "630b892cba59f1fd",
        "name": "warm/temp",
        "measurement": "temp",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "hadsag",
        "bucket": "warm",
        "x": 470,
        "y": 2840,
        "wires": []
    },
    {
        "id": "0f52da64cac47fad",
        "type": "influxdb out",
        "z": "6ad1a062e409bd44",
        "influxdb": "630b892cba59f1fd",
        "name": "warm/humid",
        "measurement": "humid",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "hadsag",
        "bucket": "warm",
        "x": 470,
        "y": 2920,
        "wires": []
    },
    {
        "id": "c74a6e622e3660b1",
        "type": "influxdb in",
        "z": "6ad1a062e409bd44",
        "influxdb": "630b892cba59f1fd",
        "name": "GET",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "hadsag",
        "x": 690,
        "y": 2320,
        "wires": [
            [
                "c4a33edcc2df8414"
            ]
        ]
    },
    {
        "id": "4fcbb05e964faa4d",
        "type": "telegram command",
        "z": "6ad1a062e409bd44",
        "name": "/start",
        "command": "/start",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "d2b13fe36ec1d327",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 110,
        "y": 280,
        "wires": [
            [
                "2acd1bb194d2215d",
                "87b097932eb7029a"
            ],
            [
                "912902990af68226"
            ]
        ]
    },
    {
        "id": "4bb1efd0d60208f0",
        "type": "telegram command",
        "z": "6ad1a062e409bd44",
        "name": "/help",
        "command": "/help",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "d2b13fe36ec1d327",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "7f18fb08934f41aa",
                "95b9e8875f7916b4"
            ],
            [
                "58f3dea9a1c1ab73"
            ]
        ]
    },
    {
        "id": "674992989044fb6d",
        "type": "telegram command",
        "z": "6ad1a062e409bd44",
        "name": "/brew",
        "command": "/brew",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "d2b13fe36ec1d327",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 110,
        "y": 960,
        "wires": [
            [
                "32def4e6fc2163a5",
                "473e28f267e85ead",
                "a68b83757fed6b47"
            ],
            [
                "ec9c990ca5cb6ea4"
            ]
        ]
    },
    {
        "id": "8f8449e28deaae0c",
        "type": "telegram command",
        "z": "6ad1a062e409bd44",
        "name": "/warm",
        "command": "/warm",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "d2b13fe36ec1d327",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 130,
        "y": 1620,
        "wires": [
            [
                "af6e9ad6c9b44b42",
                "ccc672b043e8d705",
                "4c57d022bd600fb1"
            ],
            [
                "5a3ecf8aaba18a2d"
            ]
        ]
    },
    {
        "id": "837d23dfca4b2b5e",
        "type": "telegram command",
        "z": "6ad1a062e409bd44",
        "name": "/off",
        "command": "/off",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "d2b13fe36ec1d327",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 130,
        "y": 2160,
        "wires": [
            [
                "3103e545bdc1c912",
                "b2b4e0bff62cbf87"
            ],
            [
                "30c8fb753e32b849"
            ]
        ]
    },
    {
        "id": "f60fb9b497756064",
        "type": "telegram command",
        "z": "6ad1a062e409bd44",
        "name": "/report",
        "command": "/report",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "d2b13fe36ec1d327",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 130,
        "y": 2480,
        "wires": [
            [
                "979f8c6d0a8fed2a",
                "fbc5f2b538ef476f"
            ],
            [
                "136a191a479e148a"
            ]
        ]
    },
    {
        "id": "2e75ae89b7eb0105",
        "type": "telegram sender",
        "z": "6ad1a062e409bd44",
        "name": "send res",
        "bot": "d2b13fe36ec1d327",
        "haserroroutput": false,
        "outputs": 1,
        "x": 560,
        "y": 280,
        "wires": [
            [
                "87b097932eb7029a"
            ]
        ]
    },
    {
        "id": "a173966f2304fb43",
        "type": "telegram sender",
        "z": "6ad1a062e409bd44",
        "name": "send res",
        "bot": "d2b13fe36ec1d327",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1200,
        "y": 280,
        "wires": [
            [
                "95b9e8875f7916b4"
            ]
        ]
    },
    {
        "id": "ce068af3fca22e17",
        "type": "telegram sender",
        "z": "6ad1a062e409bd44",
        "name": "send res",
        "bot": "d2b13fe36ec1d327",
        "haserroroutput": false,
        "outputs": 1,
        "x": 440,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "da9f13eb77035ccb",
        "type": "telegram sender",
        "z": "6ad1a062e409bd44",
        "name": "send res",
        "bot": "d2b13fe36ec1d327",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1040,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "283b0c4b9d8c1cdf",
        "type": "telegram sender",
        "z": "6ad1a062e409bd44",
        "name": "send res",
        "bot": "d2b13fe36ec1d327",
        "haserroroutput": false,
        "outputs": 1,
        "x": 480,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "88e6d750577306a3",
        "type": "telegram sender",
        "z": "6ad1a062e409bd44",
        "name": "send res",
        "bot": "d2b13fe36ec1d327",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1040,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "e712da9e8967fbcf",
        "type": "telegram sender",
        "z": "6ad1a062e409bd44",
        "name": "send res",
        "bot": "d2b13fe36ec1d327",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1000,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "7aac80dd60d6446d",
        "type": "telegram sender",
        "z": "6ad1a062e409bd44",
        "name": "send res",
        "bot": "d2b13fe36ec1d327",
        "haserroroutput": false,
        "outputs": 1,
        "x": 480,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "3a71c2010e9d412f",
        "type": "telegram sender",
        "z": "6ad1a062e409bd44",
        "name": "send res",
        "bot": "d2b13fe36ec1d327",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1020,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "041adf979779f0d9",
        "type": "debug",
        "z": "6ad1a062e409bd44",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 3040,
        "wires": []
    }
]